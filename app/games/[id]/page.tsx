"use client";

import React, { useState } from "react";
import { Layout } from "@/components/layout/layout";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  Play, 
  Users, 
  Clock, 
  Star, 
  Brain, 
  Shield, 
  Calendar,
  Gamepad2,
  Target,
  Trophy
} from "lucide-react";
import Link from "next/link";

// Mock game data
const mockGame = {
  id: "1",
  name: "AI Dungeon Master",
  description: "An AI-powered text-based RPG where the dungeon master adapts to your choices in real-time, creating infinite adventures.",
  longDescription: "Experience the ultimate in adaptive storytelling with our AI Dungeon Master. This revolutionary text-based RPG uses advanced AI to create unique narratives that respond to your every choice. Whether you're a seasoned adventurer or new to role-playing games, the AI adapts its storytelling style and difficulty to match your preferences.",
  category: "Adventure",
  creator: "0x1234...5678",
  creatorName: "GameDev Studios",
  players: 1250,
  rating: 4.8,
  totalRatings: 89,
  playTime: "30-60 min",
  difficulty: "Medium",
  tags: ["RPG", "Text-based", "Adaptive", "Story", "Fantasy"],
  price: 0,
  isLive: true,
  createdAt: "2024-01-15",
  lastUpdated: "2024-01-20",
  features: [
    "Infinite storylines generated by AI",
    "Adaptive difficulty based on player choices",
    "Rich character development system",
    "Multiple fantasy worlds to explore",
    "Save and continue adventures anytime"
  ],
  screenshots: [
    "https://via.placeholder.com/600x400/1f2937/ffffff?text=Adventure+Scene+1",
    "https://via.placeholder.com/600x400/1f2937/ffffff?text=Character+Creation",
    "https://via.placeholder.com/600x400/1f2937/ffffff?text=Battle+System"
  ],
  reviews: [
    {
      id: "1",
      user: "0x9876...5432",
      userName: "AdventureSeeker",
      rating: 5,
      comment: "Incredible storytelling! The AI creates such immersive narratives that I've been playing for hours.",
      date: "2024-01-18"
    },
    {
      id: "2",
      user: "0x5432...9876", 
      userName: "RPGMaster",
      rating: 4,
      comment: "Great concept and execution. The AI adapts well to different play styles.",
      date: "2024-01-16"
    }
  ]
};

export default function GameProfile({ params }: { params: { id: string } }) {
  const [isPlaying, setIsPlaying] = useState(false);

  const handlePlayGame = () => {
    setIsPlaying(true);
    // In a real implementation, this would launch the game
    setTimeout(() => {
      alert("Game would launch here! This is a demo.");
      setIsPlaying(false);
    }, 2000);
  };

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case "Easy": return "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200";
      case "Medium": return "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200";
      case "Hard": return "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200";
      default: return "bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200";
    }
  };

  return (
    <Layout>
      <div className="container mx-auto px-4 py-8">
        {/* Game Header */}
        <div className="mb-8">
          <div className="flex flex-col lg:flex-row gap-8 items-start">
            <div className="flex-1">
              <div className="flex items-center gap-3 mb-4">
                <div className="p-3 rounded-lg bg-primary/10">
                  <Gamepad2 className="h-8 w-8 text-primary" />
                </div>
                <div>
                  <h1 className="text-3xl font-bold">{mockGame.name}</h1>
                  <div className="flex items-center gap-2 mt-1">
                    <Badge variant="secondary">{mockGame.category}</Badge>
                    {mockGame.isLive && (
                      <Badge className="bg-green-500 text-white">
                        <div className="w-2 h-2 bg-white rounded-full mr-2 animate-pulse" />
                        Live
                      </Badge>
                    )}
                    <Badge 
                      className={getDifficultyColor(mockGame.difficulty)}
                      variant="secondary"
                    >
                      {mockGame.difficulty}
                    </Badge>
                  </div>
                </div>
              </div>
              
              <p className="text-lg text-muted-foreground mb-6">
                {mockGame.description}
              </p>
              
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
                <div className="flex items-center gap-2">
                  <Users className="h-5 w-5 text-muted-foreground" />
                  <div>
                    <p className="font-medium">{mockGame.players}</p>
                    <p className="text-sm text-muted-foreground">Players</p>
                  </div>
                </div>
                <div className="flex items-center gap-2">
                  <Star className="h-5 w-5 text-yellow-500" />
                  <div>
                    <p className="font-medium">{mockGame.rating}</p>
                    <p className="text-sm text-muted-foreground">Rating</p>
                  </div>
                </div>
                <div className="flex items-center gap-2">
                  <Clock className="h-5 w-5 text-muted-foreground" />
                  <div>
                    <p className="font-medium">{mockGame.playTime}</p>
                    <p className="text-sm text-muted-foreground">Play Time</p>
                  </div>
                </div>
                <div className="flex items-center gap-2">
                  <Trophy className="h-5 w-5 text-muted-foreground" />
                  <div>
                    <p className="font-medium">{mockGame.price === 0 ? "Free" : `$${mockGame.price}`}</p>
                    <p className="text-sm text-muted-foreground">Price</p>
                  </div>
                </div>
              </div>
              
              <div className="flex items-center gap-4 mb-6">
                <Avatar className="h-10 w-10">
                  <AvatarImage src={`https://api.dicebear.com/7.x/identicon/svg?seed=${mockGame.creator}`} />
                  <AvatarFallback>{mockGame.creatorName?.slice(0, 2)}</AvatarFallback>
                </Avatar>
                <div>
                  <p className="font-medium">{mockGame.creatorName}</p>
                  <p className="text-sm text-muted-foreground">{mockGame.creator}</p>
                </div>
              </div>
              
              <div className="flex flex-wrap gap-2 mb-6">
                {mockGame.tags.map((tag, idx) => (
                  <Badge key={idx} variant="outline">
                    {tag}
                  </Badge>
                ))}
              </div>
              
              <Button 
                size="lg" 
                onClick={handlePlayGame}
                disabled={isPlaying}
                className="w-full md:w-auto"
              >
                <Play className="h-5 w-5 mr-2" />
                {isPlaying ? "Loading..." : mockGame.price === 0 ? "Play Free" : `Play for $${mockGame.price}`}
              </Button>
            </div>

            {/* Game Preview/Screenshot */}
            <div className="lg:w-96">
              <Card>
                <CardContent className="p-0">
                  <img 
                    src={mockGame.screenshots[0]} 
                    alt="Game preview"
                    className="w-full h-64 object-cover rounded-lg"
                  />
                </CardContent>
              </Card>
            </div>
          </div>
        </div>

        {/* Content Tabs */}
        <Tabs defaultValue="overview" className="space-y-6">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="features">Features</TabsTrigger>
            <TabsTrigger value="reviews">Reviews</TabsTrigger>
            <TabsTrigger value="details">Details</TabsTrigger>
          </TabsList>
          
          <TabsContent value="overview" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Brain className="h-5 w-5" />
                  About This Game
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground leading-relaxed">
                  {mockGame.longDescription}
                </p>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle>Screenshots</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  {mockGame.screenshots.map((screenshot, idx) => (
                    <img
                      key={idx}
                      src={screenshot}
                      alt={`Screenshot ${idx + 1}`}
                      className="w-full h-40 object-cover rounded-lg border"
                    />
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>
          
          <TabsContent value="features" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Target className="h-5 w-5" />
                  Game Features
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ul className="space-y-3">
                  {mockGame.features.map((feature, idx) => (
                    <li key={idx} className="flex items-start gap-3">
                      <div className="h-2 w-2 rounded-full bg-primary mt-2 flex-shrink-0" />
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>
          </TabsContent>
          
          <TabsContent value="reviews" className="space-y-6">
            <div className="flex items-center gap-4 mb-6">
              <div className="flex items-center gap-2">
                <Star className="h-6 w-6 text-yellow-500 fill-current" />
                <span className="text-2xl font-bold">{mockGame.rating}</span>
              </div>
              <div className="text-muted-foreground">
                Based on {mockGame.totalRatings} reviews
              </div>
            </div>
            
            <div className="space-y-4">
              {mockGame.reviews.map((review) => (
                <Card key={review.id}>
                  <CardContent className="pt-6">
                    <div className="flex items-start gap-4">
                      <Avatar>
                        <AvatarImage src={`https://api.dicebear.com/7.x/identicon/svg?seed=${review.user}`} />
                        <AvatarFallback>{review.userName?.slice(0, 2)}</AvatarFallback>
                      </Avatar>
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-2">
                          <span className="font-medium">{review.userName}</span>
                          <div className="flex">
                            {Array.from({ length: 5 }, (_, i) => (
                              <Star
                                key={i}
                                className={`h-4 w-4 ${
                                  i < review.rating ? "text-yellow-500 fill-current" : "text-gray-300"
                                }`}
                              />
                            ))}
                          </div>
                          <span className="text-sm text-muted-foreground">
                            {new Date(review.date).toLocaleDateString()}
                          </span>
                        </div>
                        <p className="text-muted-foreground">{review.comment}</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>
          
          <TabsContent value="details" className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Calendar className="h-5 w-5" />
                    Timeline
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Released</span>
                    <span>{new Date(mockGame.createdAt).toLocaleDateString()}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Last Updated</span>
                    <span>{new Date(mockGame.lastUpdated).toLocaleDateString()}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">Status</span>
                    <Badge variant="secondary">Active</Badge>
                  </div>
                </CardContent>
              </Card>
              
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Shield className="h-5 w-5" />
                    Trust & Safety
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div className="flex items-center gap-2">
                    <div className="h-2 w-2 rounded-full bg-green-500" />
                    <span className="text-sm">Creator Verified</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <div className="h-2 w-2 rounded-full bg-green-500" />
                    <span className="text-sm">Content Reviewed</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <div className="h-2 w-2 rounded-full bg-green-500" />
                    <span className="text-sm">Regular Updates</span>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>

        {/* Related Games */}
        <div className="mt-12">
          <h2 className="text-2xl font-bold mb-6">More Games Like This</h2>
          <div className="text-center py-8">
            <p className="text-muted-foreground mb-4">
              Explore more AI-powered games in the marketplace
            </p>
            <Button asChild>
              <Link href="/games">Browse All Games</Link>
            </Button>
          </div>
        </div>
      </div>
    </Layout>
  );
}
